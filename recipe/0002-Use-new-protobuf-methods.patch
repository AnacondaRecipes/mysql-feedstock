From 0702f24a014237844d5e1215f3a7ec81d376cb08 Mon Sep 17 00:00:00 2001
From: Tor Didriksen <tor.didriksen@oracle.com>
Date: Mon, 22 Apr 2024 09:27:39 +0200
Subject: [PATCH] Bug#36537826X plugin and router use deprecated/obsolete
 protobuf interface

The AddError/AddWarning interface of ::google::protobuf::io::ErrorCollector
has been deprecated for some time, and has been removed from the
most recent version.

Implement the new interface, but keep the old one behind some ifdefs,
so that we can build with "system" protobuf on all (older) platforms.

Change-Id: I33b857d33563845a3aa693b78c0ba9d9e8eaa312
(cherry picked from commit b05168613beaf92c5a8642a856074482ac18a2fe)
---
 plugin/x/tests/driver/parsers/message_parser.cc | 14 ++++++++++++++
 router/tests/integration/test_routing_reuse.cc  | 17 +++++++++++++++--
 2 files changed, 29 insertions(+), 2 deletions(-)

diff --git a/plugin/x/tests/driver/parsers/message_parser.cc b/plugin/x/tests/driver/parsers/message_parser.cc
index f89797cafd3f..2118318b366d 100644
--- a/plugin/x/tests/driver/parsers/message_parser.cc
+++ b/plugin/x/tests/driver/parsers/message_parser.cc
@@ -27,6 +27,8 @@
 
 #include <memory>
 
+#include <google/protobuf/stubs/common.h>
+
 #include "plugin/x/tests/driver/common/utils_string_parsing.h"
 #include "plugin/x/tests/driver/connector/mysqlx_all_msgs.h"
 
@@ -40,6 +42,17 @@ class Error_dumper : public ::google::protobuf::io::ErrorCollector {
   std::stringstream m_out;
 
  public:
+#if (GOOGLE_PROTOBUF_VERSION >= 4024000)
+  void RecordError(int line, int column, absl::string_view message) override {
+    m_out << "ERROR in message: line " << line + 1 << ": column " << column
+          << ": " << message << "\n";
+  }
+
+  void RecordWarning(int line, int column, absl::string_view message) override {
+    m_out << "WARNING in message: line " << line + 1 << ": column " << column
+          << ": " << message << "\n";
+  }
+#else
   void AddError(int line, int column, const std::string &message) override {
     m_out << "ERROR in message: line " << line + 1 << ": column " << column
           << ": " << message << "\n";
@@ -49,6 +62,7 @@ class Error_dumper : public ::google::protobuf::io::ErrorCollector {
     m_out << "WARNING in message: line " << line + 1 << ": column " << column
           << ": " << message << "\n";
   }
+#endif  // (GOOGLE_PROTOBUF_VERSION >= 4024000)
 
   std::string str() { return m_out.str(); }
 };
diff --git a/router/tests/integration/test_routing_reuse.cc b/router/tests/integration/test_routing_reuse.cc
index a7662def41bb..9a107d330517 100644
--- a/router/tests/integration/test_routing_reuse.cc
+++ b/router/tests/integration/test_routing_reuse.cc
@@ -32,6 +32,7 @@
 #include <gmock/gmock-matchers.h>
 #include <google/protobuf/io/tokenizer.h>
 #include <google/protobuf/message.h>
+#include <google/protobuf/stubs/common.h>
 #include <google/protobuf/text_format.h>
 #include <gtest/gtest-param-test.h>
 #include <gtest/gtest.h>
@@ -127,15 +128,27 @@ query_one_result(MysqlClient &cli, std::string_view stmt) {
  */
 class StringErrorCollector : public google::protobuf::io::ErrorCollector {
  public:
+#if (GOOGLE_PROTOBUF_VERSION >= 4024000)
+  void RecordError(int line, google::protobuf::io::ColumnNumber column,
+                   absl::string_view msg) override
+#else
   void AddError(int line, google::protobuf::io::ColumnNumber column,
-                const std::string &msg) override {
+                const std::string &msg) override
+#endif  // (GOOGLE_PROTOBUF_VERSION >= 4024000)
+  {
     std::ostringstream ss;
 
     ss << "ERROR: " << line << ":" << column << ": " << msg;
     lines_.push_back(ss.str());
   }
+#if (GOOGLE_PROTOBUF_VERSION >= 4024000)
+  void RecordWarning(int line, google::protobuf::io::ColumnNumber column,
+                     absl::string_view msg) override
+#else
   void AddWarning(int line, google::protobuf::io::ColumnNumber column,
-                  const std::string &msg) override {
+                  const std::string &msg) override
+#endif  // (GOOGLE_PROTOBUF_VERSION >= 4024000)
+  {
     std::ostringstream ss;
 
     ss << "WARN: " << line << ":" << column << ": " << msg;